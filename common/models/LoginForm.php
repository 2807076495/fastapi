<?php
namespace common\models;

use Yii;
use yii\base\Model;

/**
 * Login form
 * @property integer $id
 * @property string $username
 * @property string $password_hash
 * @property string $password_reset_token
 * @property string $email
 * @property string $mobile
 * @property integer $type
 * @property float $account_rest
 * @property float $frozen_capital
 * @property integer $warning
 * @property string $auth_key
 * @property integer $status
 * @property integer $created_at
 * @property integer $updated_at
 * @property string $password write-only password
 */
class LoginForm extends Model
{
    public $rememberMe = true;
    public $username;
    public $password_hash;
    public $email;
    public $mobile;
    public $type;
    public $warning;
    public $status;
    public $account_rest;
    public $frozen_capital;
//    public $password;
    private $_user;


    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            // username and password are both required
            [['username', 'password_hash'], 'required'],
            // rememberMe must be a boolean value
            ['rememberMe', 'boolean'],
            ['username','string','max'=>20],
            ['password_hash', 'string', 'max' => 60],
            ['email','email'],
            ['mobile','string','max'=>12],
            [['type','warning','status'],'integer'],
            [['account_rest','frozen_capital'],'double'],
            // password is validated by validatePassword()
            ['password_hash', 'validatePassword'],
        ];
    }

    public function attributeLabels()
    {
        return [
            'username' => '用户名',
            'password_hash' => '密码'
        ];
//        return parent::attributes(); // TODO: Change the autogenerated stub
    }

    /**
     * Validates the password.
     * This method serves as the inline validation for password.
     *
     * @param string $attribute the attribute currently being validated
     * @param array $params the additional name-value pairs given in the rule
     */
    public function validatePassword($attribute, $params)
    {
        if (!$this->hasErrors()) {
            $user = $this->getUser();
            if (!$user || !$user->validatePassword($this->password_hash)) {
                $this->addError($attribute, Yii::t('app','Incorrect username or password.'));
            }
        }
    }

    /**
     * Logs in a user using the provided username and password.
     *
     * @return bool whether the user is logged in successfully
     */
    public function login()
    {
        if ($this->validate()) {
            return Yii::$app->user->login($this->getUser(), $this->rememberMe ? 3600 * 24 * 30 : 0);
        } else {
            return false;
        }
    }

    /**
     * Finds user by [[username]]
     *
     * @return User|null
     */
    protected function getUser()
    {
        if ($this->_user === null) {
            $this->_user = User::findByUsername($this->username);
        }
        return $this->_user;
    }
}
